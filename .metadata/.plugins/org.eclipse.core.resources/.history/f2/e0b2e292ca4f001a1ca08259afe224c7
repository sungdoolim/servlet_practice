package lab.web.dao;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;

import lab.web.domain.MemberVO;

public class Memberdao {
static {
	try {
		DriverManager.deregisterDriver(new oracle.jdbc.driver.OracleDriver());
		System.out.println("드라이버 로드 성공");
	
	} catch (Exception e) {
		// TODO: handle exception
		System.out.println(e.getMessage());
	}
}


private Connection getConnection() {
	DataSource ds =null;
	Connection con = null;

try {
	Context ctx = new InitialContext();
	ds = (DataSource)ctx.lookup("java:comp/env/jdbc/Oracle");
	con= ds.getConnection();
}catch(Exception e) {
	e.printStackTrace();
}
return con;

}
private void closeConnection (Connection con) {
	if(con!=null) {
		try {
			con.close();
		} catch (Exception e) {
			// TODO: handle exception
		
		}
	}
}


public void insert(MemberVO member) {
	Connection con = null;

try {
	con= getConnection();
	String sql = "insert into member values(?,?,?,?,?)";
	
	
	
	PreparedStatement pstmt=con.prepareStatement(sql);


	pstmt.setString(1,member.getUserid());
	pstmt.setString(2,member.getName());
	pstmt.setString(3,member.getPassword());
	pstmt.setString(4,member.getEmail());
	pstmt.setString(5,member.getAddress());

	pstmt.executeQuery();

}catch(Exception e) {
	throw new RuntimeException("MemberDAO.insert() :"+ e.getMessage());
}finally {
	closeConnection(con);
}

}






public MemberVO selectMember (String userid) {
	Connection con = null;
	MemberVO member= new MemberVO();
	try {
		con = getConnection();
		String sql ="select * from member where userid=?";
		PreparedStatement pstmt = con.prepareStatement(sql);
		pstmt.setString(1, userid);
		ResultSet rs = pstmt.executeQuery();
		if(rs.next()) {
			member.setUserid(userid);
			member.setPassword(rs.getString("password"));
			member.setName(rs.getString("name"));
			member.setEmail("email");
			member.setAddress("address");
		
		}
	} catch (SQLException e) {
		
		e.printStackTrace();
		throw new RuntimeException("Memberdao.selectMember() : "+e.getMessage());
		// TODO: handle exception
	}finally {
		closeConnection(con);
	}return member;
}

public String getPassword(String userid) {
	String pw ="";
	Connection con =null;
	try {
		con=getConnection();
		String sql="select password from member where userid=?";
		PreparedStatement pstmt=con.prepareStatement(sql);
		pstmt.setString(1, userid);
		ResultSet rs= pstmt.executeQuery();
		if(rs.next()) {
			pw=rs.getString("password");
		}else {
			throw new RuntimeException("아이디가 존재하지 않습니다");
		}
	} catch (Exception e) {
		// TODO: handle exception
		throw new RuntimeException("Memberdao.getPassword : "+ e.getMessage());
	}finally {
		closeConnection(con);
	}
return pw;
}

public void updateMember(MemberVO member) {
	Connection con =null;
	try {
		con=getConnection();
		String sql="update member set email=?,address=?,name=?,"+"password=? where userid=?";
	PreparedStatement pstmt = con.prepareStatement(sql);
	pstmt.setString(1,member.getEmail());
	pstmt.setString(2, member.getAddress());
	pstmt.setString(3, member.getName());
	pstmt.setString(4, member.getPassword());
	pstmt.setString(5, member.getUserid());
	
	} catch (Exception e) {
		e.printStackTrace();
	throw new RuntimeException("Memberdao.updateMember() :"+e.getMessage());
		// TODO: handle exception
	}finally {
		closeConnection(con);
	}
}



}

